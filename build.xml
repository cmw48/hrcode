<?xml version="1.0"?>

<project name="hrcode" default="all" basedir=".">

  <property name="lib.dir" location="lib" />
      <!--
        Create a classpath container which can be later used in the ant task
      -->
      <path id="build.classpath">
        <fileset dir="${lib.dir}">
          <include name="**/*.jar" />
        </fileset>
      </path>

      <path id="jar.classpath">
        <fileset dir="${lib.dir}">
          <include name="**/*.jar"/>
        </fileset>
        <pathelement path="${build.dir}"/>
        <pathelement path="${lib.dir}/log4j-1.2.17.jar"/>  
        <pathelement path="${lib.dir}/jena-2.6.4.jar"/> 
     </path>
	    	

<path id="dep.runtime">
    <fileset dir="./lib">
        <include name="**/*.jar" />
    </fileset>
</path>
<property name="dep_cp" value="${toString:dep.runtime}" />

<target name="default">
    <manifestclasspath property="manifest_cp" jarfile="myjar.jar">
        <classpath refid="dep.runtime" />
    </manifestclasspath>
    <echo message="Build Classpath: ${dep_cp}" />
    <echo message="Manifest Classpath: ${manifest_cp}" />
</target>

  <!-- Write the classpath to the console. Helpful for debugging -->
  <!-- Create one line per classpath element-->
  <pathconvert pathsep="${line.separator}" property="echo.classpath" refid="jar.classpath">
  </pathconvert>
  <!-- Write the result to the console -->
  <echo message="The following classpath is associated with jar.classpath " />
  <echo message="${echo.classpath}" /> 


  <!-- Sets variables which can later be used. -->
  <!-- The value of a property is accessed via ${} -->
  <property name="src.dir" location="src/hrcode" />
  <property name="build.dir" location="build" />
  <property name="dist.dir" location="dist" />
  <property name="docs.dir" location="docs" />



  <!-- Deletes the existing build, docs and dist directory-->
  <target name="clean">
    <delete dir="${build.dir}" />
    <delete dir="${docs.dir}" />
    <delete dir="${dist.dir}" />
  </target>

  <!-- Creates the  build, docs and dist directory-->
  <target name="makedir">
    <mkdir dir="${build.dir}" />
    <mkdir dir="${docs.dir}" />
    <mkdir dir="${dist.dir}" />
    <mkdir dir="${dist.dir}/queries" />
    <mkdir dir="${dist.dir}/rdfdump" />
    <mkdir dir="${dist.dir}/lib" />


    <copy todir="dist/queries">
      <fileset dir="./queries">
        <include name="**"/>
      </fileset>
    </copy>
 
    <copy todir="dist/rdfdump">
      <fileset dir="./rdfdump">
        <include name="**"/>
      </fileset>
    </copy>

    <copy todir="dist/lib">
      <fileset dir="./lib">
        <include name="**"/>
      </fileset>
    </copy>

  </target>

  <!-- Creates Javadoc -->
  <target name="docs" depends="compile">
    <javadoc packagenames="src" sourcepath="${src.dir}" destdir="${docs.dir}" classpathref="build.classpath"  >
      <!-- Define which files / directory should get included, we include all -->
       <fileset dir="${src.dir}">
         <include name="**" />
       </fileset>

    </javadoc>
  </target>

  <!--Creates the deployable jar file  -->
  <target name="jar" depends="compile">
    <jar destfile="${dist.dir}\hr.jar" basedir="${build.dir}">
      <manifest>
        <attribute name="Main-Class" value="hrcode.IngestMain" />
      <!--      <attribute name="Class-Path" value="${lib.dir}"/> -->
      <!-- <attribute name="Class-Path" value="/lib-dev/workspace/hrcode/dist/lib/log4j-1.2.17.jar"/> -->
      <!-- <attribute name="Class-Path" value="${manifest_cp}"/> -->
            <attribute name="Class-Path" value=". lib/XmlSchema-1.0.3.jar lib/activation-1.1.jar lib/ant-apache-log4j.jar lib/antisamy-1.4.4.jar lib/antlr-2.7.7.jar lib/apache-solr-core-3.1.0.jar lib/apache-solr-solrj-3.1.0.jar lib/arq-2.8.7-tests.jar lib/arq-2.8.7.jar lib/aterm-java-1.6.jar lib/batik-css.jar lib/commons-beanutils-core.jar lib/concurrent.jar lib/cos.jar lib/csv-1.0.jar lib/dom4j-1.6.1.jar lib/dwr-2.0.M2.8.jar lib/fedora-client.jar lib/freemarker.jar lib/gson-1.4.jar lib/iText-5.0.2.jar lib/icu4j-3.4.4.jar lib/iri-0.8-sources.jar lib/iri-0.8.jar lib/jai_codec.jar lib/jai_core.jar lib/jakarta-jstl1.2-jstl.jar lib/jakarta-jstl1.2-standard.jar lib/jakarta-oro-2.0.8.jar lib/jaxrpc.jar lib/jcalendar.jar lib/jcl-over-slf4j-1.5.5.jar lib/jdom-1.0.jar lib/jdom.jar lib/jena-2.6.4-tests.jar lib/jena-2.6.4.jar lib/jga-0.8.jar lib/jgrapht-jdk1.5.jar lib/joda-time-1.4.jar lib/json-taglib-0.4.1.jar lib/jsoup-1.6.1.jar lib/jsp-api.jar lib/jtidy-8.0-20060801.124516-2.jar lib/junit-4.8.1.jar lib/ldap.jar lib/log4j-1.2.14.jar lib/log4j-1.2.17.jar lib/mail-1.4.jar lib/mysql-connector-java-5.1.16-bin.jar lib/nekohtml.jar lib/ojdbc14_g.jar  lib/relaxngDatatype.jar lib/rowset-20040728-v101.jar lib/rsslib4j-0.2.jar lib/saaj.jar lib/saxon9he.jar lib/sdb-1.3.4-tests.jar lib/sdb-1.3.4.jar lib/servlet-api.jar lib/slf4j-api-1.5.6.jar lib/slf4j-log4j12-1.5.6.jar lib/sparqltag.jar lib/spring2.5.6.jar lib/stax-api-1.0.1.jar lib/taglibs-mailer.jar lib/taglibs-random.jar lib/taglibs-string.jar lib/tdb-0.8.7.jar lib/trippi-1.3.2-core.jar lib/wsdl4j-1.5.2.jar lib/wstx-asl-3.0.0.jar lib/xalan.jar lib/xbean-2.1.0.jar lib/xbean-spring-2.5.jar lib/xercesImpl.jar lib/xml-apis.jar lib/xpp3_min-1.1.3.4.O.jar lib/xsdlib.jar lib/xstream-1.2.2.jar"/>
 
      </manifest>
    </jar>
  </target>

  <target name="main" depends="compile, jar, docs">
    <description>Main target</description>
  </target>

	  <!-- Compiles the java code (including the usage of library for JUnit -->
	  <target name="compile" depends="clean, makedir">
	   <!--<javac includeantruntime="false" srcdir="${src.dir}" destdir="${build.dir}"> -->
	   <!--   <classpath refid="master-classpath"/> -->
	   <!--// </javac> -->
	     <javac includeantruntime="false" destdir="${build.dir}" srcdir="${src.dir}" classpathref="build.classpath" />
	  </target>
	
	  <target name="all" depends="clean,makedir,compile,docs,jar">
	          <!-- description="Clean work dirs, then compile and create a WAR" -->
	  </target>
</project>
